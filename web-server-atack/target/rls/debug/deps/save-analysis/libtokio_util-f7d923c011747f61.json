{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1","program":"/home/jimmy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=f7d923c011747f61","-C","extra-filename=-f7d923c011747f61","--out-dir","/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps","-L","dependency=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps","--extern","bytes=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libbytes-1cc7c62e6b906e91.rmeta","--extern","futures_core=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libfutures_core-ca7084b85b3c71ac.rmeta","--extern","futures_sink=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libfutures_sink-256fdf7aadeb2dc0.rmeta","--extern","pin_project_lite=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libpin_project_lite-a998cf3a0c0f2ffc.rmeta","--extern","tokio=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libtokio-9b58a1f07d11f6f8.rmeta","--extern","tracing=/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libtracing-3ed3fd77d3687b9d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/jimmy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jimmy/Documents/is-2022/SO/web-server-attack/web-server-atack/target/rls/debug/deps/libtokio_util-f7d923c011747f61.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[12031118907811875177,0]},"crate_root":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src","external_crates":[{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":20,"id":{"name":"futures_sink","disambiguator":[11806979643220771367,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":21,"id":{"name":"tokio","disambiguator":[17149412151755668525,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":22,"id":{"name":"mio","disambiguator":[18295937331315922083,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":23,"id":{"name":"log","disambiguator":[8147683544257590759,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":24,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":25,"id":{"name":"libc","disambiguator":[7494242181442760606,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":26,"id":{"name":"pin_project_lite","disambiguator":[10864849255587560100,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":27,"id":{"name":"bytes","disambiguator":[7314794341678089032,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":28,"id":{"name":"memchr","disambiguator":[7480610296841804772,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":29,"id":{"name":"socket2","disambiguator":[4653990803985051927,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","num":30,"id":{"name":"futures_core","disambiguator":[1591406731620905623,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":31,"id":{"name":"tracing","disambiguator":[16280955334974689318,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":32,"id":{"name":"tracing_core","disambiguator":[12895175864615084123,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":33,"id":{"name":"lazy_static","disambiguator":[9708727071027780738,0]}},{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":34,"id":{"name":"tracing_attributes","disambiguator":[11907872897796330893,0]}}],"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1231},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171620,"byte_end":15171630,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171669,"byte_end":15171676,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171715,"byte_end":15171722,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1575},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171884,"byte_end":15171890,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1267},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171892,"byte_end":15171903,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171951,"byte_end":15171961,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1493},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172010,"byte_end":15172021,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172083,"byte_end":15172103,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172105,"byte_end":15172130,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172179,"byte_end":15172189,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172191,"byte_end":15172206,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1339},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172271,"byte_end":15172288,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172290,"byte_end":15172312,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6945,"byte_end":6954,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6956,"byte_end":6973,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6975,"byte_end":7000,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1446},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7064,"byte_end":7077,"line_start":9,"line_end":9,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7079,"byte_end":7089,"line_start":9,"line_end":9,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7137,"byte_end":7150,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7193,"byte_end":7210,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":524},{"krate":0,"index":14},{"krate":0,"index":406},{"krate":0,"index":475}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1228}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":5429,"byte_end":5454,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161348,"byte_end":15161401,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161402,"byte_end":15161405,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161406,"byte_end":15161481,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161482,"byte_end":15161547,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161548,"byte_end":15161551,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161552,"byte_end":15161632,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161633,"byte_end":15161708,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161709,"byte_end":15161757,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161758,"byte_end":15161761,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161762,"byte_end":15161785,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161786,"byte_end":15161789,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161790,"byte_end":15161869,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161870,"byte_end":15161949,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15161950,"byte_end":15162021,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162022,"byte_end":15162092,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162093,"byte_end":15162171,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162172,"byte_end":15162248,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162249,"byte_end":15162282,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162283,"byte_end":15162286,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162287,"byte_end":15162367,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162368,"byte_end":15162448,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162449,"byte_end":15162499,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162500,"byte_end":15162503,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162504,"byte_end":15162555,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162556,"byte_end":15162605,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162606,"byte_end":15162657,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162658,"byte_end":15162661,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162662,"byte_end":15162727,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162728,"byte_end":15162731,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162732,"byte_end":15162809,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162810,"byte_end":15162851,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162852,"byte_end":15162855,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162856,"byte_end":15162936,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15162937,"byte_end":15163016,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163017,"byte_end":15163095,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163096,"byte_end":15163175,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163176,"byte_end":15163190,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163191,"byte_end":15163194,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163195,"byte_end":15163274,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163275,"byte_end":15163354,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163355,"byte_end":15163372,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163373,"byte_end":15163376,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163377,"byte_end":15163454,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163455,"byte_end":15163534,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163535,"byte_end":15163612,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163613,"byte_end":15163683,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163684,"byte_end":15163733,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163734,"byte_end":15163737,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163738,"byte_end":15163751,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163752,"byte_end":15163784,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163785,"byte_end":15163852,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163853,"byte_end":15163967,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15163968,"byte_end":15164005,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164006,"byte_end":15164067,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164068,"byte_end":15164117,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164118,"byte_end":15164121,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164122,"byte_end":15164163,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164164,"byte_end":15164174,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164175,"byte_end":15164259,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164260,"byte_end":15164316,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164317,"byte_end":15164320,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164321,"byte_end":15164342,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164343,"byte_end":15164410,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164411,"byte_end":15164439,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164440,"byte_end":15164453,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164454,"byte_end":15164472,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164473,"byte_end":15164482,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164483,"byte_end":15164486,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164487,"byte_end":15164546,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164547,"byte_end":15164571,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164572,"byte_end":15164581,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164582,"byte_end":15164587,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164588,"byte_end":15164596,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164597,"byte_end":15164604,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164605,"byte_end":15164679,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164680,"byte_end":15164683,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164684,"byte_end":15164706,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164707,"byte_end":15164710,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164711,"byte_end":15164788,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164789,"byte_end":15164865,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164866,"byte_end":15164945,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15164946,"byte_end":15165000,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165001,"byte_end":15165004,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165005,"byte_end":15165049,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165050,"byte_end":15165057,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165058,"byte_end":15165093,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165094,"byte_end":15165125,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165126,"byte_end":15165129,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165130,"byte_end":15165159,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165160,"byte_end":15165163,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165164,"byte_end":15165203,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165204,"byte_end":15165207,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165208,"byte_end":15165246,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165247,"byte_end":15165274,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165275,"byte_end":15165311,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165312,"byte_end":15165315,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165316,"byte_end":15165334,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165335,"byte_end":15165357,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165358,"byte_end":15165388,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165389,"byte_end":15165443,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165444,"byte_end":15165474,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165475,"byte_end":15165532,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165533,"byte_end":15165565,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165566,"byte_end":15165579,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165580,"byte_end":15165583,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165584,"byte_end":15165618,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165619,"byte_end":15165663,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165664,"byte_end":15165716,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165717,"byte_end":15165784,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165785,"byte_end":15165788,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165789,"byte_end":15165863,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165864,"byte_end":15165930,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165931,"byte_end":15165960,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15165961,"byte_end":15166008,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166009,"byte_end":15166061,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166062,"byte_end":15166133,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166134,"byte_end":15166153,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166154,"byte_end":15166167,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166168,"byte_end":15166171,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166172,"byte_end":15166211,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166212,"byte_end":15166267,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166268,"byte_end":15166286,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166287,"byte_end":15166363,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166364,"byte_end":15166430,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166431,"byte_end":15166483,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166484,"byte_end":15166487,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166488,"byte_end":15166568,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166569,"byte_end":15166594,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166595,"byte_end":15166627,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166628,"byte_end":15166641,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166642,"byte_end":15166645,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166646,"byte_end":15166718,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166719,"byte_end":15166745,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166746,"byte_end":15166797,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166798,"byte_end":15166834,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166835,"byte_end":15166838,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166839,"byte_end":15166917,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166918,"byte_end":15166961,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15166962,"byte_end":15167009,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167010,"byte_end":15167046,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167047,"byte_end":15167091,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167092,"byte_end":15167148,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167149,"byte_end":15167197,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167198,"byte_end":15167220,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167221,"byte_end":15167239,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167240,"byte_end":15167253,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167254,"byte_end":15167263,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167264,"byte_end":15167269,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167270,"byte_end":15167277,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167278,"byte_end":15167281,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167282,"byte_end":15167305,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167306,"byte_end":15167309,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167310,"byte_end":15167388,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167389,"byte_end":15167462,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167463,"byte_end":15167539,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167540,"byte_end":15167620,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167621,"byte_end":15167637,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167638,"byte_end":15167641,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167642,"byte_end":15167722,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167723,"byte_end":15167802,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167803,"byte_end":15167883,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167884,"byte_end":15167956,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167957,"byte_end":15167960,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15167961,"byte_end":15168038,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168039,"byte_end":15168117,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168118,"byte_end":15168191,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168192,"byte_end":15168258,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168259,"byte_end":15168262,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168263,"byte_end":15168276,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168277,"byte_end":15168310,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168311,"byte_end":15168345,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168346,"byte_end":15168383,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168384,"byte_end":15168451,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168452,"byte_end":15168487,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168488,"byte_end":15168549,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168550,"byte_end":15168596,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168597,"byte_end":15168658,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168659,"byte_end":15168662,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168663,"byte_end":15168691,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168692,"byte_end":15168695,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168696,"byte_end":15168737,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168738,"byte_end":15168748,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168749,"byte_end":15168773,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168774,"byte_end":15168848,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168849,"byte_end":15168891,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168892,"byte_end":15168906,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168907,"byte_end":15168964,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15168965,"byte_end":15169014,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169015,"byte_end":15169029,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169030,"byte_end":15169067,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169068,"byte_end":15169119,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169120,"byte_end":15169166,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169167,"byte_end":15169197,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169198,"byte_end":15169212,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169213,"byte_end":15169222,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169223,"byte_end":15169228,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169229,"byte_end":15169236,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169237,"byte_end":15169244,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169245,"byte_end":15169320,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169321,"byte_end":15169394,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169395,"byte_end":15169437,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169438,"byte_end":15169441,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169442,"byte_end":15169464,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169465,"byte_end":15169468,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169469,"byte_end":15169546,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169547,"byte_end":15169623,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169624,"byte_end":15169700,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169701,"byte_end":15169724,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169725,"byte_end":15169728,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169729,"byte_end":15169774,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169775,"byte_end":15169782,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169783,"byte_end":15169818,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169819,"byte_end":15169843,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169844,"byte_end":15169847,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169848,"byte_end":15169877,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169878,"byte_end":15169881,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169882,"byte_end":15169921,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169922,"byte_end":15169925,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169926,"byte_end":15169972,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15169973,"byte_end":15170009,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170010,"byte_end":15170013,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170014,"byte_end":15170105,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170106,"byte_end":15170180,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170181,"byte_end":15170203,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170204,"byte_end":15170237,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170238,"byte_end":15170285,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170286,"byte_end":15170338,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170339,"byte_end":15170414,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170415,"byte_end":15170434,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170435,"byte_end":15170448,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170449,"byte_end":15170452,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170453,"byte_end":15170505,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170506,"byte_end":15170583,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170584,"byte_end":15170648,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170649,"byte_end":15170652,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170653,"byte_end":15170696,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170697,"byte_end":15170737,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170738,"byte_end":15170741,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170742,"byte_end":15170799,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170800,"byte_end":15170846,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170847,"byte_end":15170898,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170899,"byte_end":15170917,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170918,"byte_end":15170927,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170928,"byte_end":15170933,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170934,"byte_end":15170941,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170942,"byte_end":15170945,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170946,"byte_end":15170985,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15170986,"byte_end":15171027,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171028,"byte_end":15171064,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171065,"byte_end":15171097,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171098,"byte_end":15171194,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171195,"byte_end":15171246,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171247,"byte_end":15171300,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171301,"byte_end":15171344,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171345,"byte_end":15171389,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171390,"byte_end":15171438,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171439,"byte_end":15171487,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171488,"byte_end":15171534,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15171535,"byte_end":15171574,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1231},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173598,"byte_end":15173608,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172441,"byte_end":15172526,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172527,"byte_end":15172530,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172531,"byte_end":15172569,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172570,"byte_end":15172608,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172609,"byte_end":15172612,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172613,"byte_end":15172626,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172627,"byte_end":15172630,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172631,"byte_end":15172712,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172713,"byte_end":15172716,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172717,"byte_end":15172756,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172757,"byte_end":15172790,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172791,"byte_end":15172820,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172821,"byte_end":15172824,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172825,"byte_end":15172832,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172833,"byte_end":15172851,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172852,"byte_end":15172882,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172883,"byte_end":15172907,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172908,"byte_end":15172915,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172916,"byte_end":15172945,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172946,"byte_end":15172998,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15172999,"byte_end":15173002,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173003,"byte_end":15173021,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173022,"byte_end":15173039,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173040,"byte_end":15173120,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173121,"byte_end":15173155,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173156,"byte_end":15173209,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173210,"byte_end":15173221,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173222,"byte_end":15173229,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173230,"byte_end":15173235,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173236,"byte_end":15173283,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173284,"byte_end":15173337,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173338,"byte_end":15173396,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173397,"byte_end":15173476,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173477,"byte_end":15173489,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173490,"byte_end":15173497,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173498,"byte_end":15173505,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173506,"byte_end":15173509,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173710,"byte_end":15173713,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173637,"byte_end":15173698,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":577},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175951,"byte_end":15175958,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174665,"byte_end":15174700,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174701,"byte_end":15174704,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174705,"byte_end":15174774,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174775,"byte_end":15174854,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174855,"byte_end":15174927,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174928,"byte_end":15174952,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174953,"byte_end":15174956,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15174957,"byte_end":15175025,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175026,"byte_end":15175103,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175104,"byte_end":15175165,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175166,"byte_end":15175169,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175170,"byte_end":15175231,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175232,"byte_end":15175294,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175295,"byte_end":15175298,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175299,"byte_end":15175362,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175363,"byte_end":15175426,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175427,"byte_end":15175506,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175507,"byte_end":15175581,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175582,"byte_end":15175601,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175602,"byte_end":15175605,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175606,"byte_end":15175674,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175675,"byte_end":15175737,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175738,"byte_end":15175813,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175814,"byte_end":15175854,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175855,"byte_end":15175858,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175859,"byte_end":15175895,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175896,"byte_end":15175940,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":578},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176006,"byte_end":15176010,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15175965,"byte_end":15175996,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":579},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176776,"byte_end":15176781,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176017,"byte_end":15176069,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176074,"byte_end":15176077,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176082,"byte_end":15176151,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176156,"byte_end":15176226,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176231,"byte_end":15176277,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176282,"byte_end":15176285,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176290,"byte_end":15176366,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176371,"byte_end":15176446,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176451,"byte_end":15176526,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176531,"byte_end":15176571,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176576,"byte_end":15176579,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176584,"byte_end":15176658,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176663,"byte_end":15176709,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176714,"byte_end":15176717,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176722,"byte_end":15176766,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179717,"byte_end":15179723,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176805,"byte_end":15176870,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176875,"byte_end":15176878,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176883,"byte_end":15176957,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15176962,"byte_end":15177034,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177039,"byte_end":15177112,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177117,"byte_end":15177160,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177165,"byte_end":15177168,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177173,"byte_end":15177246,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177251,"byte_end":15177314,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177319,"byte_end":15177394,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177399,"byte_end":15177474,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177479,"byte_end":15177502,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177507,"byte_end":15177510,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177515,"byte_end":15177587,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177592,"byte_end":15177666,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177671,"byte_end":15177741,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177746,"byte_end":15177749,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177754,"byte_end":15177822,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177827,"byte_end":15177898,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177903,"byte_end":15177983,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15177988,"byte_end":15178000,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178005,"byte_end":15178008,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178013,"byte_end":15178083,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178088,"byte_end":15178163,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178168,"byte_end":15178205,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178210,"byte_end":15178213,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178218,"byte_end":15178254,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178259,"byte_end":15178303,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178308,"byte_end":15178311,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178316,"byte_end":15178339,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178344,"byte_end":15178347,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178352,"byte_end":15178426,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178431,"byte_end":15178505,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178510,"byte_end":15178563,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178568,"byte_end":15178571,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178576,"byte_end":15178647,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178652,"byte_end":15178722,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178727,"byte_end":15178743,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178748,"byte_end":15178751,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178756,"byte_end":15178769,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178774,"byte_end":15178792,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178797,"byte_end":15178802,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178807,"byte_end":15178833,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178838,"byte_end":15178875,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178880,"byte_end":15178885,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178890,"byte_end":15178911,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178916,"byte_end":15178921,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178926,"byte_end":15178956,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178961,"byte_end":15178975,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15178980,"byte_end":15179011,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179016,"byte_end":15179049,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179054,"byte_end":15179057,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179062,"byte_end":15179155,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179160,"byte_end":15179178,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179183,"byte_end":15179186,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179191,"byte_end":15179263,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179268,"byte_end":15179328,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179333,"byte_end":15179385,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179390,"byte_end":15179452,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179457,"byte_end":15179524,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179529,"byte_end":15179532,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179537,"byte_end":15179565,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179570,"byte_end":15179579,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179584,"byte_end":15179589,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179594,"byte_end":15179601,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179606,"byte_end":15179609,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179614,"byte_end":15179683,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179688,"byte_end":15179709,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180889,"byte_end":15180899,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179804,"byte_end":15179876,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179881,"byte_end":15179930,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179935,"byte_end":15179938,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15179943,"byte_end":15180011,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180016,"byte_end":15180083,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180088,"byte_end":15180156,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180161,"byte_end":15180237,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180242,"byte_end":15180308,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180313,"byte_end":15180316,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180321,"byte_end":15180389,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180394,"byte_end":15180469,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180474,"byte_end":15180549,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180554,"byte_end":15180626,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180631,"byte_end":15180673,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180678,"byte_end":15180681,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180686,"byte_end":15180761,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180766,"byte_end":15180844,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15180849,"byte_end":15180881,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182507,"byte_end":15182513,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181317,"byte_end":15181397,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181402,"byte_end":15181478,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181483,"byte_end":15181486,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181491,"byte_end":15181566,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181571,"byte_end":15181641,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181646,"byte_end":15181717,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181722,"byte_end":15181794,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181799,"byte_end":15181857,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181862,"byte_end":15181865,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181870,"byte_end":15181939,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15181944,"byte_end":15182019,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182024,"byte_end":15182100,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182105,"byte_end":15182127,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182132,"byte_end":15182135,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182140,"byte_end":15182213,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182218,"byte_end":15182291,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182296,"byte_end":15182372,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182377,"byte_end":15182380,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182385,"byte_end":15182421,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182426,"byte_end":15182458,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15182463,"byte_end":15182499,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":594},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182847,"byte_end":15182854,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182692,"byte_end":15182764,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182765,"byte_end":15182785,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182786,"byte_end":15182789,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182790,"byte_end":15182836,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183119,"byte_end":15183124,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182867,"byte_end":15182899,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182904,"byte_end":15182907,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182912,"byte_end":15182989,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15182994,"byte_end":15183050,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183055,"byte_end":15183058,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183063,"byte_end":15183109,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183475,"byte_end":15183481,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183148,"byte_end":15183193,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183198,"byte_end":15183201,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183206,"byte_end":15183280,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183285,"byte_end":15183365,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183370,"byte_end":15183408,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183413,"byte_end":15183416,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15183421,"byte_end":15183467,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1575},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197121,"byte_end":15197127,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1578}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198900,"byte_end":15198903,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197269,"byte_end":15197349,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197354,"byte_end":15197435,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197440,"byte_end":15197443,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197448,"byte_end":15197523,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197528,"byte_end":15197598,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197603,"byte_end":15197672,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197677,"byte_end":15197749,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197754,"byte_end":15197812,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197817,"byte_end":15197820,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197825,"byte_end":15197896,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197901,"byte_end":15197978,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197983,"byte_end":15198059,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198064,"byte_end":15198086,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198091,"byte_end":15198094,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198099,"byte_end":15198172,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198177,"byte_end":15198250,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198255,"byte_end":15198331,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198336,"byte_end":15198339,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198344,"byte_end":15198420,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198425,"byte_end":15198501,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198506,"byte_end":15198581,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198586,"byte_end":15198621,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198626,"byte_end":15198629,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198634,"byte_end":15198670,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198675,"byte_end":15198707,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198712,"byte_end":15198749,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198754,"byte_end":15198792,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15198797,"byte_end":15198888,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200511,"byte_end":15200524,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199116,"byte_end":15199196,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199201,"byte_end":15199282,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199287,"byte_end":15199336,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199341,"byte_end":15199344,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199349,"byte_end":15199424,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199429,"byte_end":15199499,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199504,"byte_end":15199573,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199578,"byte_end":15199650,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199655,"byte_end":15199713,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199718,"byte_end":15199721,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199726,"byte_end":15199797,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199802,"byte_end":15199879,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199884,"byte_end":15199960,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199965,"byte_end":15199987,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15199992,"byte_end":15199995,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200000,"byte_end":15200073,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200078,"byte_end":15200151,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200156,"byte_end":15200232,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200237,"byte_end":15200240,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200245,"byte_end":15200281,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200286,"byte_end":15200318,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200323,"byte_end":15200360,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200365,"byte_end":15200403,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15200408,"byte_end":15200499,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202671,"byte_end":15202681,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201094,"byte_end":15201174,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201179,"byte_end":15201260,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201265,"byte_end":15201268,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201273,"byte_end":15201348,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201353,"byte_end":15201423,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201428,"byte_end":15201499,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201504,"byte_end":15201576,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201581,"byte_end":15201639,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201644,"byte_end":15201647,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201652,"byte_end":15201723,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201728,"byte_end":15201805,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201810,"byte_end":15201886,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201891,"byte_end":15201913,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201918,"byte_end":15201921,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201926,"byte_end":15202005,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202010,"byte_end":15202087,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202092,"byte_end":15202095,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202100,"byte_end":15202173,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202178,"byte_end":15202251,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202256,"byte_end":15202332,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202337,"byte_end":15202340,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202345,"byte_end":15202381,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202386,"byte_end":15202418,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202423,"byte_end":15202461,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202466,"byte_end":15202504,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202509,"byte_end":15202563,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15202568,"byte_end":15202659,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203316,"byte_end":15203323,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203033,"byte_end":15203096,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203101,"byte_end":15203114,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203119,"byte_end":15203122,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203127,"byte_end":15203202,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203207,"byte_end":15203277,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203282,"byte_end":15203304,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203667,"byte_end":15203674,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203376,"byte_end":15203447,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203452,"byte_end":15203465,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203470,"byte_end":15203473,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203478,"byte_end":15203553,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203558,"byte_end":15203628,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203633,"byte_end":15203655,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204037,"byte_end":15204048,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203739,"byte_end":15203817,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203822,"byte_end":15203835,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203840,"byte_end":15203843,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203848,"byte_end":15203923,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15203928,"byte_end":15203998,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204003,"byte_end":15204025,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204395,"byte_end":15204400,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204144,"byte_end":15204202,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204207,"byte_end":15204220,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204225,"byte_end":15204228,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204233,"byte_end":15204307,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204312,"byte_end":15204383,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204712,"byte_end":15204721,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204453,"byte_end":15204519,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204524,"byte_end":15204537,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204542,"byte_end":15204545,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204550,"byte_end":15204624,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204629,"byte_end":15204700,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205058,"byte_end":15205067,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204786,"byte_end":15204854,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204859,"byte_end":15204883,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204888,"byte_end":15204891,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204896,"byte_end":15204970,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15204975,"byte_end":15205046,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205758,"byte_end":15205771,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205499,"byte_end":15205565,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205570,"byte_end":15205583,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205588,"byte_end":15205591,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205596,"byte_end":15205670,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205675,"byte_end":15205746,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205917,"byte_end":15205928,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15205862,"byte_end":15205905,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206063,"byte_end":15206078,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206000,"byte_end":15206051,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206218,"byte_end":15206230,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206162,"byte_end":15206206,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206367,"byte_end":15206383,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206303,"byte_end":15206355,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206733,"byte_end":15206743,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206468,"byte_end":15206531,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206536,"byte_end":15206539,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206544,"byte_end":15206619,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206624,"byte_end":15206694,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206699,"byte_end":15206721,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207115,"byte_end":15207125,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206793,"byte_end":15206867,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206872,"byte_end":15206913,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206918,"byte_end":15206921,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15206926,"byte_end":15207001,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207006,"byte_end":15207076,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207081,"byte_end":15207103,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1267},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209099,"byte_end":15209110,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208784,"byte_end":15208855,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208856,"byte_end":15208928,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208929,"byte_end":15208989,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208990,"byte_end":15208993,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208994,"byte_end":15209030,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209048,"byte_end":15209087,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209196,"byte_end":15209198,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209123,"byte_end":15209187,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209230,"byte_end":15209235,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209208,"byte_end":15209221,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1272},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209300,"byte_end":15209308,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209245,"byte_end":15209291,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1273},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209395,"byte_end":15209404,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209325,"byte_end":15209386,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209637,"byte_end":15209640,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209585,"byte_end":15209625,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1534},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210369,"byte_end":15210379,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1537}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210630,"byte_end":15210633,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210562,"byte_end":15210618,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210981,"byte_end":15210994,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210865,"byte_end":15210947,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210952,"byte_end":15210969,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211748,"byte_end":15211755,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211461,"byte_end":15211524,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211529,"byte_end":15211546,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211551,"byte_end":15211554,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211559,"byte_end":15211634,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211639,"byte_end":15211709,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211714,"byte_end":15211736,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212103,"byte_end":15212110,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211808,"byte_end":15211879,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211884,"byte_end":15211901,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211906,"byte_end":15211909,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211914,"byte_end":15211989,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211994,"byte_end":15212064,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212069,"byte_end":15212091,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212477,"byte_end":15212488,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212175,"byte_end":15212253,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212258,"byte_end":15212275,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212280,"byte_end":15212283,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212288,"byte_end":15212363,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212368,"byte_end":15212438,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212443,"byte_end":15212465,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212853,"byte_end":15212863,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212584,"byte_end":15212651,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212656,"byte_end":15212659,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212664,"byte_end":15212739,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212744,"byte_end":15212814,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212819,"byte_end":15212841,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212975,"byte_end":15212982,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15212913,"byte_end":15212963,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213105,"byte_end":15213116,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213035,"byte_end":15213093,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213281,"byte_end":15213292,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213181,"byte_end":15213240,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213245,"byte_end":15213269,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213808,"byte_end":15213823,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213738,"byte_end":15213796,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213969,"byte_end":15213980,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15213914,"byte_end":15213957,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15214110,"byte_end":15214125,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15214047,"byte_end":15214098,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1493},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216226,"byte_end":15216237,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1496}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216444,"byte_end":15216447,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216375,"byte_end":15216432,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217005,"byte_end":15217012,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216717,"byte_end":15216780,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216785,"byte_end":15216803,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216808,"byte_end":15216811,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216816,"byte_end":15216891,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216896,"byte_end":15216966,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216971,"byte_end":15216993,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217361,"byte_end":15217368,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217065,"byte_end":15217136,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217141,"byte_end":15217159,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217164,"byte_end":15217167,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217172,"byte_end":15217247,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217252,"byte_end":15217322,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217327,"byte_end":15217349,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217736,"byte_end":15217747,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217433,"byte_end":15217511,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217516,"byte_end":15217534,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217539,"byte_end":15217542,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217547,"byte_end":15217622,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217627,"byte_end":15217697,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217702,"byte_end":15217724,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218113,"byte_end":15218123,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217843,"byte_end":15217911,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217916,"byte_end":15217919,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15217924,"byte_end":15217999,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218004,"byte_end":15218074,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218079,"byte_end":15218101,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218235,"byte_end":15218242,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218173,"byte_end":15218223,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218365,"byte_end":15218376,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218295,"byte_end":15218353,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218542,"byte_end":15218553,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218441,"byte_end":15218501,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15218506,"byte_end":15218530,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219071,"byte_end":15219086,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219001,"byte_end":15219059,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219233,"byte_end":15219245,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219177,"byte_end":15219221,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219376,"byte_end":15219392,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219312,"byte_end":15219364,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1279},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1039},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1041},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1065},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15220919,"byte_end":15220971,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15220972,"byte_end":15220975,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15220976,"byte_end":15221046,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221047,"byte_end":15221105,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221106,"byte_end":15221178,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221179,"byte_end":15221249,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221250,"byte_end":15221317,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221318,"byte_end":15221321,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221322,"byte_end":15221343,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221344,"byte_end":15221347,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221348,"byte_end":15221423,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221424,"byte_end":15221495,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221496,"byte_end":15221567,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221568,"byte_end":15221638,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221639,"byte_end":15221679,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221680,"byte_end":15221683,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221684,"byte_end":15221691,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221692,"byte_end":15221735,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221736,"byte_end":15221794,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221795,"byte_end":15221798,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221799,"byte_end":15221854,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221855,"byte_end":15221897,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221898,"byte_end":15221903,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221904,"byte_end":15221956,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221957,"byte_end":15221962,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221963,"byte_end":15221985,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221986,"byte_end":15221993,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221994,"byte_end":15221997,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15221998,"byte_end":15222070,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222071,"byte_end":15222142,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222143,"byte_end":15222162,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222163,"byte_end":15222166,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222167,"byte_end":15222178,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222179,"byte_end":15222228,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222229,"byte_end":15222278,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222279,"byte_end":15222328,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222329,"byte_end":15222336,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222337,"byte_end":15222340,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222341,"byte_end":15222379,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222380,"byte_end":15222383,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222384,"byte_end":15222391,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222392,"byte_end":15222435,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222436,"byte_end":15222494,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222495,"byte_end":15222498,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222499,"byte_end":15222524,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222525,"byte_end":15222546,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222547,"byte_end":15222550,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222551,"byte_end":15222627,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222628,"byte_end":15222637,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222638,"byte_end":15222680,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222681,"byte_end":15222686,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222687,"byte_end":15222760,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222761,"byte_end":15222808,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222809,"byte_end":15222812,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222813,"byte_end":15222850,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222851,"byte_end":15222865,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222866,"byte_end":15222871,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222872,"byte_end":15222879,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222880,"byte_end":15222883,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222884,"byte_end":15222926,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222927,"byte_end":15222930,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222931,"byte_end":15222942,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222943,"byte_end":15222982,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15222983,"byte_end":15223022,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223023,"byte_end":15223062,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223063,"byte_end":15223070,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223071,"byte_end":15223074,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223075,"byte_end":15223089,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223090,"byte_end":15223093,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223094,"byte_end":15223169,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223170,"byte_end":15223243,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223244,"byte_end":15223310,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223311,"byte_end":15223380,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223381,"byte_end":15223446,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223447,"byte_end":15223450,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223451,"byte_end":15223467,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223468,"byte_end":15223471,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223472,"byte_end":15223548,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223549,"byte_end":15223590,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223591,"byte_end":15223594,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223595,"byte_end":15223602,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223603,"byte_end":15223634,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223635,"byte_end":15223685,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223686,"byte_end":15223727,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223728,"byte_end":15223763,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223764,"byte_end":15223812,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223813,"byte_end":15223848,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223849,"byte_end":15223897,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223898,"byte_end":15223947,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223948,"byte_end":15223970,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223971,"byte_end":15223978,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15223979,"byte_end":15224001,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224002,"byte_end":15224009,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224010,"byte_end":15224013,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224014,"byte_end":15224062,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224063,"byte_end":15224066,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224067,"byte_end":15224078,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224079,"byte_end":15224131,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224132,"byte_end":15224197,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224198,"byte_end":15224263,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224264,"byte_end":15224329,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224330,"byte_end":15224337,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224338,"byte_end":15224341,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224342,"byte_end":15224418,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224419,"byte_end":15224493,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224494,"byte_end":15224566,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224567,"byte_end":15224643,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224644,"byte_end":15224686,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224687,"byte_end":15224690,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224691,"byte_end":15224707,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224708,"byte_end":15224711,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224712,"byte_end":15224787,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224788,"byte_end":15224829,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224830,"byte_end":15224833,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224834,"byte_end":15224841,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224842,"byte_end":15224873,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224874,"byte_end":15224924,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224925,"byte_end":15224966,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15224967,"byte_end":15225002,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225003,"byte_end":15225051,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225052,"byte_end":15225087,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225088,"byte_end":15225136,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225137,"byte_end":15225196,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225197,"byte_end":15225219,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225220,"byte_end":15225227,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225228,"byte_end":15225250,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225251,"byte_end":15225258,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225259,"byte_end":15225262,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225263,"byte_end":15225311,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225312,"byte_end":15225315,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225316,"byte_end":15225327,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225328,"byte_end":15225377,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225378,"byte_end":15225432,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225433,"byte_end":15225487,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225488,"byte_end":15225542,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225543,"byte_end":15225550,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225551,"byte_end":15225554,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225555,"byte_end":15225628,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225629,"byte_end":15225696,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225697,"byte_end":15225700,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225701,"byte_end":15225717,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225718,"byte_end":15225721,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225722,"byte_end":15225798,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225799,"byte_end":15225871,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225872,"byte_end":15225911,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225912,"byte_end":15225915,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225916,"byte_end":15225923,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225924,"byte_end":15225955,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15225956,"byte_end":15226006,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226007,"byte_end":15226048,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226049,"byte_end":15226084,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226085,"byte_end":15226133,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226134,"byte_end":15226169,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226170,"byte_end":15226217,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226218,"byte_end":15226238,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226239,"byte_end":15226261,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226262,"byte_end":15226269,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226270,"byte_end":15226292,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226293,"byte_end":15226300,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226301,"byte_end":15226304,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226305,"byte_end":15226353,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226354,"byte_end":15226357,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226358,"byte_end":15226369,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226370,"byte_end":15226422,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226423,"byte_end":15226488,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226489,"byte_end":15226554,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226555,"byte_end":15226620,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226621,"byte_end":15226628,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226629,"byte_end":15226632,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226633,"byte_end":15226705,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226706,"byte_end":15226781,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226782,"byte_end":15226854,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226855,"byte_end":15226931,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15226932,"byte_end":15227005,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227006,"byte_end":15227009,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227010,"byte_end":15227026,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227027,"byte_end":15227030,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227031,"byte_end":15227105,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227106,"byte_end":15227173,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227174,"byte_end":15227177,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227178,"byte_end":15227185,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227186,"byte_end":15227217,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227218,"byte_end":15227268,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227269,"byte_end":15227310,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227311,"byte_end":15227346,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227347,"byte_end":15227395,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227396,"byte_end":15227427,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227428,"byte_end":15227476,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227477,"byte_end":15227497,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227498,"byte_end":15227520,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227521,"byte_end":15227528,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227529,"byte_end":15227551,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227552,"byte_end":15227559,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227560,"byte_end":15227563,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227564,"byte_end":15227612,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227613,"byte_end":15227616,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227617,"byte_end":15227628,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227629,"byte_end":15227655,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227656,"byte_end":15227701,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227702,"byte_end":15227747,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227748,"byte_end":15227793,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227794,"byte_end":15227797,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227798,"byte_end":15227826,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227827,"byte_end":15227872,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227873,"byte_end":15227918,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227919,"byte_end":15227964,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227965,"byte_end":15227972,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227973,"byte_end":15227976,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15227977,"byte_end":15228049,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228050,"byte_end":15228126,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228127,"byte_end":15228197,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228198,"byte_end":15228267,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228268,"byte_end":15228305,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228306,"byte_end":15228309,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228310,"byte_end":15228384,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228385,"byte_end":15228439,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228440,"byte_end":15228443,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228444,"byte_end":15228460,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228461,"byte_end":15228464,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228465,"byte_end":15228538,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228539,"byte_end":15228615,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228616,"byte_end":15228690,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228691,"byte_end":15228704,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228705,"byte_end":15228708,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228709,"byte_end":15228716,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228717,"byte_end":15228748,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228749,"byte_end":15228799,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228800,"byte_end":15228841,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228842,"byte_end":15228877,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228878,"byte_end":15228927,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228928,"byte_end":15228963,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15228964,"byte_end":15229012,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229013,"byte_end":15229057,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229058,"byte_end":15229080,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229081,"byte_end":15229088,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229089,"byte_end":15229111,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229112,"byte_end":15229119,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229120,"byte_end":15229123,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229124,"byte_end":15229172,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229173,"byte_end":15229176,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229177,"byte_end":15229188,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229189,"byte_end":15229215,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229216,"byte_end":15229266,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229267,"byte_end":15229317,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229318,"byte_end":15229368,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229369,"byte_end":15229372,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229373,"byte_end":15229393,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229394,"byte_end":15229424,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229425,"byte_end":15229455,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229456,"byte_end":15229486,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229487,"byte_end":15229494,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229495,"byte_end":15229498,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229499,"byte_end":15229572,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229573,"byte_end":15229648,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229649,"byte_end":15229721,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229722,"byte_end":15229760,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229761,"byte_end":15229764,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229765,"byte_end":15229839,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229840,"byte_end":15229916,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229917,"byte_end":15229990,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15229991,"byte_end":15230019,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230020,"byte_end":15230023,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230024,"byte_end":15230040,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230041,"byte_end":15230044,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230045,"byte_end":15230118,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230119,"byte_end":15230195,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230196,"byte_end":15230270,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230271,"byte_end":15230343,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230344,"byte_end":15230355,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230356,"byte_end":15230359,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230360,"byte_end":15230367,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230368,"byte_end":15230399,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230400,"byte_end":15230450,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230451,"byte_end":15230492,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230493,"byte_end":15230528,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230529,"byte_end":15230578,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230579,"byte_end":15230614,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230615,"byte_end":15230680,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230681,"byte_end":15230701,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230702,"byte_end":15230724,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230725,"byte_end":15230732,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230733,"byte_end":15230740,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230741,"byte_end":15230744,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230745,"byte_end":15230793,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230794,"byte_end":15230797,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230798,"byte_end":15230809,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230810,"byte_end":15230836,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230837,"byte_end":15230887,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230888,"byte_end":15230938,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230939,"byte_end":15230989,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230990,"byte_end":15230993,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15230994,"byte_end":15231014,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231015,"byte_end":15231045,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231046,"byte_end":15231076,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231077,"byte_end":15231107,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231108,"byte_end":15231115,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231116,"byte_end":15231119,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231120,"byte_end":15231193,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231194,"byte_end":15231268,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231269,"byte_end":15231343,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231344,"byte_end":15231417,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231418,"byte_end":15231494,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231495,"byte_end":15231528,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231529,"byte_end":15231532,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231533,"byte_end":15231549,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231550,"byte_end":15231553,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231554,"byte_end":15231628,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231629,"byte_end":15231696,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231697,"byte_end":15231700,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231701,"byte_end":15231708,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231709,"byte_end":15231740,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231741,"byte_end":15231791,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231792,"byte_end":15231833,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231834,"byte_end":15231869,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231870,"byte_end":15231918,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231919,"byte_end":15231950,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231951,"byte_end":15231998,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15231999,"byte_end":15232045,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232046,"byte_end":15232068,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232069,"byte_end":15232076,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232077,"byte_end":15232099,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232100,"byte_end":15232107,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232108,"byte_end":15232111,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232112,"byte_end":15232160,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232161,"byte_end":15232164,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232165,"byte_end":15232176,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232177,"byte_end":15232233,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232234,"byte_end":15232295,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232296,"byte_end":15232357,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232358,"byte_end":15232419,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232420,"byte_end":15232427,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232428,"byte_end":15232431,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232432,"byte_end":15232506,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232507,"byte_end":15232527,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232528,"byte_end":15232531,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232532,"byte_end":15232546,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232547,"byte_end":15232550,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232551,"byte_end":15232626,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232627,"byte_end":15232699,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232700,"byte_end":15232768,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232769,"byte_end":15232845,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232846,"byte_end":15232887,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232888,"byte_end":15232891,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232892,"byte_end":15232962,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232963,"byte_end":15232981,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232982,"byte_end":15232985,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232986,"byte_end":15232993,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15232994,"byte_end":15233026,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233027,"byte_end":15233077,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233078,"byte_end":15233122,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233123,"byte_end":15233136,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233137,"byte_end":15233172,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233173,"byte_end":15233208,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233209,"byte_end":15233232,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233233,"byte_end":15233240,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233241,"byte_end":15233263,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233264,"byte_end":15233271,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233272,"byte_end":15233275,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233276,"byte_end":15233326,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233327,"byte_end":15233330,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233331,"byte_end":15233342,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233343,"byte_end":15233376,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233377,"byte_end":15233410,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233411,"byte_end":15233444,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233445,"byte_end":15233452,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233453,"byte_end":15233456,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233457,"byte_end":15233526,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233527,"byte_end":15233564,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233565,"byte_end":15233604,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233605,"byte_end":15233650,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233651,"byte_end":15233698,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233699,"byte_end":15233729,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15233730,"byte_end":15233763,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234330,"byte_end":15234337,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234012,"byte_end":15234067,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234068,"byte_end":15234071,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234072,"byte_end":15234147,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234148,"byte_end":15234228,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234229,"byte_end":15234288,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1039},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235008,"byte_end":15235033,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1040}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15234923,"byte_end":15234996,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235385,"byte_end":15235405,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235054,"byte_end":15235128,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235129,"byte_end":15235132,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235133,"byte_end":15235212,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235213,"byte_end":15235256,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235257,"byte_end":15235260,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235261,"byte_end":15235314,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235315,"byte_end":15235318,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235319,"byte_end":15235349,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235749,"byte_end":15235752,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235658,"byte_end":15235737,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235979,"byte_end":15235986,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235876,"byte_end":15235951,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235956,"byte_end":15235967,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236208,"byte_end":15236224,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236036,"byte_end":15236077,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236082,"byte_end":15236085,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236090,"byte_end":15236163,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236168,"byte_end":15236196,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236645,"byte_end":15236665,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236289,"byte_end":15236323,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236328,"byte_end":15236331,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236336,"byte_end":15236406,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236411,"byte_end":15236486,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236491,"byte_end":15236563,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15236568,"byte_end":15236633,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1059},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241454,"byte_end":15241469,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241378,"byte_end":15241439,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242394,"byte_end":15242397,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241848,"byte_end":15241923,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241928,"byte_end":15241939,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241944,"byte_end":15241947,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241952,"byte_end":15241966,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241971,"byte_end":15241974,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241979,"byte_end":15241986,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241991,"byte_end":15242022,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242027,"byte_end":15242075,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242080,"byte_end":15242083,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242088,"byte_end":15242129,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242134,"byte_end":15242169,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242174,"byte_end":15242205,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242210,"byte_end":15242245,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242250,"byte_end":15242279,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242284,"byte_end":15242304,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242309,"byte_end":15242331,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242336,"byte_end":15242343,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242348,"byte_end":15242370,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15242375,"byte_end":15242382,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243582,"byte_end":15243592,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243061,"byte_end":15243110,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243115,"byte_end":15243118,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243123,"byte_end":15243155,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243160,"byte_end":15243163,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243168,"byte_end":15243236,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243241,"byte_end":15243244,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243249,"byte_end":15243263,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243268,"byte_end":15243271,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243276,"byte_end":15243283,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243288,"byte_end":15243319,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243324,"byte_end":15243372,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243377,"byte_end":15243380,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243385,"byte_end":15243426,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243431,"byte_end":15243466,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243471,"byte_end":15243492,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243497,"byte_end":15243519,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243524,"byte_end":15243531,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243536,"byte_end":15243558,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243563,"byte_end":15243570,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244224,"byte_end":15244237,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243691,"byte_end":15243743,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243748,"byte_end":15243751,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243756,"byte_end":15243794,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243799,"byte_end":15243802,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243807,"byte_end":15243875,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243880,"byte_end":15243883,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243888,"byte_end":15243902,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243907,"byte_end":15243910,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243915,"byte_end":15243922,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243927,"byte_end":15243958,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15243963,"byte_end":15244011,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244016,"byte_end":15244019,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244024,"byte_end":15244065,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244070,"byte_end":15244105,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244110,"byte_end":15244134,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244139,"byte_end":15244161,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244166,"byte_end":15244173,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244178,"byte_end":15244200,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244205,"byte_end":15244212,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244870,"byte_end":15244883,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244337,"byte_end":15244389,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244394,"byte_end":15244397,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244402,"byte_end":15244440,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244445,"byte_end":15244448,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244453,"byte_end":15244521,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244526,"byte_end":15244529,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244534,"byte_end":15244548,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244553,"byte_end":15244556,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244561,"byte_end":15244568,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244573,"byte_end":15244604,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244609,"byte_end":15244657,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244662,"byte_end":15244665,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244670,"byte_end":15244711,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244716,"byte_end":15244751,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244756,"byte_end":15244780,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244785,"byte_end":15244807,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244812,"byte_end":15244819,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244824,"byte_end":15244846,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15244851,"byte_end":15244858,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245980,"byte_end":15245996,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245052,"byte_end":15245090,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245095,"byte_end":15245098,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245103,"byte_end":15245175,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245180,"byte_end":15245205,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245210,"byte_end":15245213,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245218,"byte_end":15245290,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245295,"byte_end":15245364,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245369,"byte_end":15245442,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245447,"byte_end":15245459,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245464,"byte_end":15245467,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245472,"byte_end":15245547,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245552,"byte_end":15245613,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245618,"byte_end":15245621,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245626,"byte_end":15245640,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245645,"byte_end":15245648,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245653,"byte_end":15245660,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245665,"byte_end":15245696,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245701,"byte_end":15245749,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245754,"byte_end":15245757,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245762,"byte_end":15245803,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245808,"byte_end":15245843,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245848,"byte_end":15245890,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245895,"byte_end":15245917,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245922,"byte_end":15245929,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245934,"byte_end":15245956,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15245961,"byte_end":15245968,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247095,"byte_end":15247112,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246093,"byte_end":15246163,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246168,"byte_end":15246171,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246176,"byte_end":15246249,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246254,"byte_end":15246274,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246279,"byte_end":15246282,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246287,"byte_end":15246301,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246306,"byte_end":15246309,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246314,"byte_end":15246321,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246326,"byte_end":15246357,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246362,"byte_end":15246410,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246415,"byte_end":15246418,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246423,"byte_end":15246464,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246469,"byte_end":15246504,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246509,"byte_end":15246544,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246549,"byte_end":15246571,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246576,"byte_end":15246583,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246588,"byte_end":15246610,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246615,"byte_end":15246622,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246627,"byte_end":15246630,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246635,"byte_end":15246709,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246714,"byte_end":15246755,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246760,"byte_end":15246763,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246768,"byte_end":15246787,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246792,"byte_end":15246823,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246828,"byte_end":15246878,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246883,"byte_end":15246924,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246929,"byte_end":15246964,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15246969,"byte_end":15247005,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247010,"byte_end":15247032,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247037,"byte_end":15247044,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247049,"byte_end":15247071,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247076,"byte_end":15247083,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247797,"byte_end":15247816,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247233,"byte_end":15247296,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247301,"byte_end":15247304,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247309,"byte_end":15247360,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247365,"byte_end":15247368,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247373,"byte_end":15247441,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247446,"byte_end":15247449,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247454,"byte_end":15247468,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247473,"byte_end":15247476,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247481,"byte_end":15247488,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247493,"byte_end":15247524,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247529,"byte_end":15247577,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247582,"byte_end":15247585,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247590,"byte_end":15247631,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247636,"byte_end":15247671,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247676,"byte_end":15247707,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247712,"byte_end":15247734,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247739,"byte_end":15247746,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247751,"byte_end":15247773,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247778,"byte_end":15247785,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248475,"byte_end":15248494,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15247985,"byte_end":15248051,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248056,"byte_end":15248059,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248064,"byte_end":15248119,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248124,"byte_end":15248127,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248132,"byte_end":15248146,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248151,"byte_end":15248154,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248159,"byte_end":15248166,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248171,"byte_end":15248202,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248207,"byte_end":15248255,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248260,"byte_end":15248263,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248268,"byte_end":15248309,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248314,"byte_end":15248349,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248354,"byte_end":15248385,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248390,"byte_end":15248412,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248417,"byte_end":15248424,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248429,"byte_end":15248451,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248456,"byte_end":15248463,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249048,"byte_end":15249065,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248597,"byte_end":15248670,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248675,"byte_end":15248693,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248698,"byte_end":15248701,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248706,"byte_end":15248720,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248725,"byte_end":15248728,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248733,"byte_end":15248740,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248745,"byte_end":15248776,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248781,"byte_end":15248829,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248834,"byte_end":15248837,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248842,"byte_end":15248883,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248888,"byte_end":15248923,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248928,"byte_end":15248958,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248963,"byte_end":15248985,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15248990,"byte_end":15248997,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249002,"byte_end":15249024,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249029,"byte_end":15249036,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249715,"byte_end":15249723,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249166,"byte_end":15249229,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249234,"byte_end":15249237,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249242,"byte_end":15249303,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249308,"byte_end":15249311,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249316,"byte_end":15249370,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249375,"byte_end":15249378,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249383,"byte_end":15249397,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249402,"byte_end":15249405,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249410,"byte_end":15249417,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249422,"byte_end":15249453,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249458,"byte_end":15249506,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249511,"byte_end":15249514,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249519,"byte_end":15249560,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249565,"byte_end":15249600,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249605,"byte_end":15249625,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249630,"byte_end":15249652,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249657,"byte_end":15249664,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249669,"byte_end":15249691,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249696,"byte_end":15249703,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250247,"byte_end":15250256,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249821,"byte_end":15249884,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249889,"byte_end":15249892,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249897,"byte_end":15249911,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249916,"byte_end":15249919,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249924,"byte_end":15249931,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249936,"byte_end":15249984,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15249989,"byte_end":15250010,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250015,"byte_end":15250050,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250055,"byte_end":15250086,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250091,"byte_end":15250126,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250131,"byte_end":15250160,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250165,"byte_end":15250185,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250190,"byte_end":15250211,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250216,"byte_end":15250223,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250228,"byte_end":15250235,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250916,"byte_end":15250924,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250408,"byte_end":15250461,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250466,"byte_end":15250469,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250474,"byte_end":15250488,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250493,"byte_end":15250496,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250501,"byte_end":15250508,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250513,"byte_end":15250544,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250549,"byte_end":15250597,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250602,"byte_end":15250605,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250610,"byte_end":15250651,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250656,"byte_end":15250691,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250696,"byte_end":15250727,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250732,"byte_end":15250767,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250772,"byte_end":15250801,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250806,"byte_end":15250826,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250831,"byte_end":15250853,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250858,"byte_end":15250865,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250870,"byte_end":15250892,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15250897,"byte_end":15250904,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251501,"byte_end":15251510,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251088,"byte_end":15251142,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251147,"byte_end":15251150,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251155,"byte_end":15251169,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251174,"byte_end":15251177,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251182,"byte_end":15251189,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251194,"byte_end":15251226,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251231,"byte_end":15251281,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251286,"byte_end":15251330,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251335,"byte_end":15251370,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251375,"byte_end":15251410,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251415,"byte_end":15251438,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251443,"byte_end":15251450,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251455,"byte_end":15251477,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251482,"byte_end":15251489,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252123,"byte_end":15252133,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251671,"byte_end":15251720,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251725,"byte_end":15251728,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251733,"byte_end":15251747,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251752,"byte_end":15251755,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251760,"byte_end":15251767,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251772,"byte_end":15251817,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251822,"byte_end":15251872,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251877,"byte_end":15251933,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251938,"byte_end":15251951,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251956,"byte_end":15251991,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15251996,"byte_end":15252031,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252036,"byte_end":15252060,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252065,"byte_end":15252072,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252077,"byte_end":15252099,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252104,"byte_end":15252111,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15253512,"byte_end":15253522,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15253269,"byte_end":15253356,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15253357,"byte_end":15253360,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15253361,"byte_end":15253399,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15253400,"byte_end":15253438,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254622,"byte_end":15254625,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254203,"byte_end":15254263,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254268,"byte_end":15254271,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254276,"byte_end":15254286,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254291,"byte_end":15254294,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254299,"byte_end":15254371,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254376,"byte_end":15254449,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254454,"byte_end":15254521,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254526,"byte_end":15254529,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254534,"byte_end":15254610,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255756,"byte_end":15255775,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254783,"byte_end":15254843,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254848,"byte_end":15254851,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254856,"byte_end":15254919,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254924,"byte_end":15255002,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255007,"byte_end":15255074,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255079,"byte_end":15255151,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255156,"byte_end":15255226,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255231,"byte_end":15255254,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255259,"byte_end":15255262,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255267,"byte_end":15255277,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255282,"byte_end":15255285,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255290,"byte_end":15255365,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255370,"byte_end":15255443,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255448,"byte_end":15255524,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255529,"byte_end":15255602,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255607,"byte_end":15255677,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255682,"byte_end":15255685,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255690,"byte_end":15255744,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256341,"byte_end":15256351,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255903,"byte_end":15255953,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255958,"byte_end":15255961,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255966,"byte_end":15255973,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15255978,"byte_end":15255997,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256002,"byte_end":15256040,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256045,"byte_end":15256048,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256053,"byte_end":15256087,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256092,"byte_end":15256139,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256144,"byte_end":15256151,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256156,"byte_end":15256163,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256168,"byte_end":15256206,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256211,"byte_end":15256214,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256219,"byte_end":15256272,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256277,"byte_end":15256317,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256322,"byte_end":15256329,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260677,"byte_end":15260698,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260631,"byte_end":15260672,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260734,"byte_end":15260736,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260704,"byte_end":15260729,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1331},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260609,"byte_end":15260624,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1334}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260526,"byte_end":15260582,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262658,"byte_end":15262675,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261472,"byte_end":15261613,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261614,"byte_end":15261617,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261618,"byte_end":15261656,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261657,"byte_end":15261695,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261696,"byte_end":15261699,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261700,"byte_end":15261713,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261714,"byte_end":15261781,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261782,"byte_end":15261785,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261786,"byte_end":15261819,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261820,"byte_end":15261849,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261850,"byte_end":15261853,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261854,"byte_end":15261861,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261862,"byte_end":15261918,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261919,"byte_end":15261953,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261954,"byte_end":15261957,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261958,"byte_end":15261963,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15261964,"byte_end":15262011,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262012,"byte_end":15262065,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262066,"byte_end":15262143,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262144,"byte_end":15262179,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262180,"byte_end":15262201,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262202,"byte_end":15262252,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262253,"byte_end":15262316,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262317,"byte_end":15262380,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262381,"byte_end":15262444,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262445,"byte_end":15262501,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262502,"byte_end":15262551,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262552,"byte_end":15262564,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262565,"byte_end":15262572,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262573,"byte_end":15262580,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15262581,"byte_end":15262584,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264010,"byte_end":15264013,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263568,"byte_end":15263636,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263641,"byte_end":15263644,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263649,"byte_end":15263659,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263664,"byte_end":15263667,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263672,"byte_end":15263751,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263756,"byte_end":15263830,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263835,"byte_end":15263902,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263907,"byte_end":15263910,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263915,"byte_end":15263998,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265324,"byte_end":15265343,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264293,"byte_end":15264361,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264366,"byte_end":15264369,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264374,"byte_end":15264444,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264449,"byte_end":15264535,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264540,"byte_end":15264610,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264615,"byte_end":15264692,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264697,"byte_end":15264767,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264772,"byte_end":15264795,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264800,"byte_end":15264803,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264808,"byte_end":15264818,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264823,"byte_end":15264826,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264831,"byte_end":15264913,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264918,"byte_end":15264991,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15264996,"byte_end":15265073,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265078,"byte_end":15265151,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265156,"byte_end":15265231,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265236,"byte_end":15265239,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265244,"byte_end":15265312,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15266131,"byte_end":15266141,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265600,"byte_end":15265651,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265656,"byte_end":15265659,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265664,"byte_end":15265671,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265676,"byte_end":15265695,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265700,"byte_end":15265745,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265750,"byte_end":15265753,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265758,"byte_end":15265830,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265835,"byte_end":15265882,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265887,"byte_end":15265894,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265899,"byte_end":15265906,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265911,"byte_end":15265956,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265961,"byte_end":15265964,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15265969,"byte_end":15266062,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15266067,"byte_end":15266107,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15266112,"byte_end":15266119,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1364},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270237,"byte_end":15270259,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270190,"byte_end":15270232,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1366},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270295,"byte_end":15270297,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270265,"byte_end":15270290,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1363},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270161,"byte_end":15270183,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1366}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270077,"byte_end":15270134,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":403}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6853,"byte_end":6883,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1371},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40808,"byte_end":40817,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40631,"byte_end":40695,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40696,"byte_end":40779,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41080,"byte_end":41086,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40893,"byte_end":40967,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40972,"byte_end":41042,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41047,"byte_end":41068,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8901,"byte_end":8918,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7679,"byte_end":7756,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7757,"byte_end":7767,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7768,"byte_end":7771,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7772,"byte_end":7837,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7838,"byte_end":7912,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7913,"byte_end":7916,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7917,"byte_end":8000,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8001,"byte_end":8004,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8005,"byte_end":8019,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8020,"byte_end":8023,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8024,"byte_end":8037,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8060,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8061,"byte_end":8105,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8106,"byte_end":8109,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8128,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8129,"byte_end":8150,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8151,"byte_end":8196,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8238,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8239,"byte_end":8242,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8294,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8295,"byte_end":8358,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8359,"byte_end":8380,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8381,"byte_end":8430,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8431,"byte_end":8477,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8478,"byte_end":8499,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8517,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8518,"byte_end":8599,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8600,"byte_end":8622,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8623,"byte_end":8640,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8654,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8655,"byte_end":8666,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8667,"byte_end":8670,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8704,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8705,"byte_end":8780,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8781,"byte_end":8808,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8809,"byte_end":8820,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8821,"byte_end":8824,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8875,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8876,"byte_end":8881,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8882,"byte_end":8889,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9338,"byte_end":9363,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9185,"byte_end":9259,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9260,"byte_end":9277,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9278,"byte_end":9326,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11871,"byte_end":11874,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11796,"byte_end":11859,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12664,"byte_end":12735,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12740,"byte_end":12773,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12778,"byte_end":12781,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12786,"byte_end":12857,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12862,"byte_end":12894,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12899,"byte_end":12902,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12907,"byte_end":12921,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12926,"byte_end":12929,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12934,"byte_end":12947,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12952,"byte_end":12974,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12979,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71140,"byte_end":71153,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71045,"byte_end":71111,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71432,"byte_end":71442,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71201,"byte_end":71239,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71244,"byte_end":71247,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71252,"byte_end":71346,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71351,"byte_end":71420,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1468},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71962,"byte_end":71972,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71824,"byte_end":71881,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71882,"byte_end":71885,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71886,"byte_end":71933,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72876,"byte_end":72879,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72833,"byte_end":72864,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73863,"byte_end":73875,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73202,"byte_end":73256,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73261,"byte_end":73264,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73269,"byte_end":73354,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73359,"byte_end":73375,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73380,"byte_end":73383,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73388,"byte_end":73482,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73487,"byte_end":73573,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73578,"byte_end":73649,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73654,"byte_end":73729,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73734,"byte_end":73737,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73742,"byte_end":73754,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73759,"byte_end":73762,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73767,"byte_end":73851,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75880,"byte_end":75889,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75420,"byte_end":75453,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75458,"byte_end":75461,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75466,"byte_end":75552,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75557,"byte_end":75592,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75597,"byte_end":75600,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75605,"byte_end":75617,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75622,"byte_end":75625,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75630,"byte_end":75714,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75719,"byte_end":75722,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75727,"byte_end":75739,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75744,"byte_end":75747,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75752,"byte_end":75848,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75853,"byte_end":75868,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76908,"byte_end":76917,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76762,"byte_end":76808,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76813,"byte_end":76816,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76821,"byte_end":76896,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77239,"byte_end":77246,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77015,"byte_end":77078,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77083,"byte_end":77086,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77091,"byte_end":77187,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77192,"byte_end":77227,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78044,"byte_end":78049,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77318,"byte_end":77341,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77346,"byte_end":77349,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77354,"byte_end":77448,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77453,"byte_end":77546,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77551,"byte_end":77554,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77559,"byte_end":77653,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77658,"byte_end":77753,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77758,"byte_end":77854,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77859,"byte_end":77914,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77919,"byte_end":77922,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77927,"byte_end":77982,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77987,"byte_end":78032,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78983,"byte_end":78993,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78687,"byte_end":78735,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78740,"byte_end":78743,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78748,"byte_end":78832,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78837,"byte_end":78932,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78937,"byte_end":78971,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82211,"byte_end":82224,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82080,"byte_end":82153,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82154,"byte_end":82157,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82158,"byte_end":82199,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82427,"byte_end":82430,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82382,"byte_end":82415,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82594,"byte_end":82599,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82557,"byte_end":82582,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82705,"byte_end":82716,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82651,"byte_end":82693,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82831,"byte_end":82841,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82786,"byte_end":82819,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83575,"byte_end":83587,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82902,"byte_end":82950,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82955,"byte_end":82958,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82963,"byte_end":83004,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83009,"byte_end":83012,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83017,"byte_end":83079,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83084,"byte_end":83144,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83149,"byte_end":83209,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83214,"byte_end":83217,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83222,"byte_end":83297,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83302,"byte_end":83370,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83375,"byte_end":83451,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83456,"byte_end":83524,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83529,"byte_end":83563,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85015,"byte_end":85032,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84731,"byte_end":84783,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84788,"byte_end":84791,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84796,"byte_end":84872,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84877,"byte_end":84911,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84916,"byte_end":84919,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84924,"byte_end":85003,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85492,"byte_end":85503,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85105,"byte_end":85147,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85152,"byte_end":85155,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85160,"byte_end":85233,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85238,"byte_end":85278,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85283,"byte_end":85286,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85291,"byte_end":85361,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85366,"byte_end":85400,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85405,"byte_end":85408,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85413,"byte_end":85480,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86651,"byte_end":86668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86446,"byte_end":86508,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86509,"byte_end":86512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86513,"byte_end":86580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86581,"byte_end":86639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86863,"byte_end":86866,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86780,"byte_end":86851,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87331,"byte_end":87334,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87116,"byte_end":87168,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87173,"byte_end":87176,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87253,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87258,"byte_end":87319,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87772,"byte_end":87779,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87531,"byte_end":87583,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87588,"byte_end":87591,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87596,"byte_end":87669,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87674,"byte_end":87744,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87749,"byte_end":87760,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89609,"byte_end":89616,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89545,"byte_end":89597,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89902,"byte_end":89906,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89847,"byte_end":89890,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":406},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":1476},{"krate":0,"index":1485},{"krate":0,"index":1489},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":470}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91047,"byte_end":91082,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1479},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93029,"byte_end":93033,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1476},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1482},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93042,"byte_end":93047,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1476},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1476},"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93010,"byte_end":93016,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1482}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91259,"byte_end":91365,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91366,"byte_end":91369,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91370,"byte_end":91460,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91461,"byte_end":91464,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91465,"byte_end":91500,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91501,"byte_end":91504,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91505,"byte_end":91518,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91519,"byte_end":91522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91523,"byte_end":91560,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91561,"byte_end":91564,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91565,"byte_end":91584,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91585,"byte_end":91627,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91628,"byte_end":91678,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91679,"byte_end":91730,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91731,"byte_end":91749,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91750,"byte_end":91771,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91772,"byte_end":91814,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91815,"byte_end":91848,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91849,"byte_end":91865,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91866,"byte_end":91960,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91961,"byte_end":91971,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91972,"byte_end":91975,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91976,"byte_end":92023,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92024,"byte_end":92029,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92030,"byte_end":92037,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92038,"byte_end":92041,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92242,"byte_end":92245,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92246,"byte_end":92332,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92333,"byte_end":92343,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92344,"byte_end":92347,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92348,"byte_end":92355,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92356,"byte_end":92391,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92392,"byte_end":92434,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92435,"byte_end":92485,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92486,"byte_end":92537,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92538,"byte_end":92541,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92542,"byte_end":92560,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92561,"byte_end":92582,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92583,"byte_end":92625,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92626,"byte_end":92673,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92674,"byte_end":92690,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92691,"byte_end":92740,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92741,"byte_end":92751,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92752,"byte_end":92755,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92756,"byte_end":92789,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92790,"byte_end":92830,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92831,"byte_end":92863,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92864,"byte_end":92869,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92870,"byte_end":92877,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92878,"byte_end":92900,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173620,"byte_end":15173630,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173781,"byte_end":15173791,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15174118,"byte_end":15174128,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15174352,"byte_end":15174362,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15184599,"byte_end":15184608,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15184840,"byte_end":15184850,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185001,"byte_end":15185010,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185365,"byte_end":15185375,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185621,"byte_end":15185629,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185726,"byte_end":15185734,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185845,"byte_end":15185853,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185953,"byte_end":15185961,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15186071,"byte_end":15186081,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15194368,"byte_end":15194378,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197213,"byte_end":15197219,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201075,"byte_end":15201081,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207472,"byte_end":15207478,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207794,"byte_end":15207800,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208515,"byte_end":15208521,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209561,"byte_end":15209572,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210499,"byte_end":15210509,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211438,"byte_end":15211448,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15214278,"byte_end":15214288,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15214601,"byte_end":15214611,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15215337,"byte_end":15215347,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216326,"byte_end":15216337,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216693,"byte_end":15216704,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219549,"byte_end":15219560,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15220324,"byte_end":15220335,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15220576,"byte_end":15220587,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235631,"byte_end":15235651,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15238985,"byte_end":15239005,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15239891,"byte_end":15239911,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241252,"byte_end":15241272,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241834,"byte_end":15241841,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252616,"byte_end":15252623,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252749,"byte_end":15252774,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252932,"byte_end":15252957,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15253092,"byte_end":15253117,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254186,"byte_end":15254196,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256738,"byte_end":15256748,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260124,"byte_end":15260134,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260457,"byte_end":15260467,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260774,"byte_end":15260789,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15261071,"byte_end":15261086,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15261203,"byte_end":15261218,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263544,"byte_end":15263561,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15266210,"byte_end":15266227,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15269519,"byte_end":15269536,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15269900,"byte_end":15269917,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270335,"byte_end":15270357,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270686,"byte_end":15270708,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270839,"byte_end":15270861,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40877,"byte_end":40886,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41246,"byte_end":41255,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9121,"byte_end":9138,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9163,"byte_end":9180,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9914,"byte_end":9939,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10013,"byte_end":10030,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10255,"byte_end":10272,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10678,"byte_end":10695,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11665,"byte_end":11682,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11772,"byte_end":11789,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42136,"byte_end":42144,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42394,"byte_end":42402,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42507,"byte_end":42515,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42824,"byte_end":42834,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71178,"byte_end":71191,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71513,"byte_end":71526,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71686,"byte_end":71699,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72813,"byte_end":72823,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":80464,"byte_end":80474,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":81204,"byte_end":81214,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82362,"byte_end":82375,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85587,"byte_end":85600,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85814,"byte_end":85827,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85945,"byte_end":85958,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":86170,"byte_end":86183,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86749,"byte_end":86766,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90013,"byte_end":90030,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90328,"byte_end":90345,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90567,"byte_end":90584,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90684,"byte_end":90701,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90730,"byte_end":90747,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90895,"byte_end":90912,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93653,"byte_end":93659,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93902,"byte_end":93908,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94181,"byte_end":94187,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94515,"byte_end":94521,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94875,"byte_end":94881,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":95433,"byte_end":95439,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":524}},{"kind":"Mod","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15172032,"byte_end":15172048,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":982}},{"kind":"Mod","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":406}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173620,"byte_end":15173630,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15173781,"byte_end":15173791,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1231},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15174118,"byte_end":15174128,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1231},"to":{"krate":0,"index":594}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15174352,"byte_end":15174362,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1231},"to":{"krate":0,"index":594}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15184599,"byte_end":15184608,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1255},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15184840,"byte_end":15184850,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":655},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185001,"byte_end":15185010,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1255},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185365,"byte_end":15185375,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":655},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185621,"byte_end":15185629,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185726,"byte_end":15185734,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":2621}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185845,"byte_end":15185853,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15185953,"byte_end":15185961,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":2621}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15186071,"byte_end":15186081,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1787},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15194368,"byte_end":15194378,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1787},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15197213,"byte_end":15197219,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15201075,"byte_end":15201081,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207472,"byte_end":15207478,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1575},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15207794,"byte_end":15207800,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1575},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15208515,"byte_end":15208521,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15209561,"byte_end":15209572,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15210499,"byte_end":15210509,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15211438,"byte_end":15211448,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15214278,"byte_end":15214288,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1534},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15214601,"byte_end":15214611,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1534},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15215337,"byte_end":15215347,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216326,"byte_end":15216337,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15216693,"byte_end":15216704,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15219549,"byte_end":15219560,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1493},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15220324,"byte_end":15220335,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1493},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15220576,"byte_end":15220587,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15235631,"byte_end":15235651,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15238985,"byte_end":15239005,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15239891,"byte_end":15239911,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":594}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241252,"byte_end":15241272,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15241834,"byte_end":15241841,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252616,"byte_end":15252623,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252749,"byte_end":15252774,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1039},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15252932,"byte_end":15252957,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1039},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15253092,"byte_end":15253117,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1039},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15254186,"byte_end":15254196,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15256738,"byte_end":15256748,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1309},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260124,"byte_end":15260134,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1309},"to":{"krate":0,"index":594}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260457,"byte_end":15260467,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15260774,"byte_end":15260789,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15261071,"byte_end":15261086,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15261203,"byte_end":15261218,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15263544,"byte_end":15263561,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15266210,"byte_end":15266227,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15269519,"byte_end":15269536,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":594}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15269900,"byte_end":15269917,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270335,"byte_end":15270357,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270686,"byte_end":15270708,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15270839,"byte_end":15270861,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1363},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40877,"byte_end":40886,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41246,"byte_end":41255,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1371},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9121,"byte_end":9138,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9163,"byte_end":9180,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9914,"byte_end":9939,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10013,"byte_end":10030,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10255,"byte_end":10272,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10678,"byte_end":10695,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11665,"byte_end":11682,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11772,"byte_end":11789,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42136,"byte_end":42144,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42394,"byte_end":42402,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42507,"byte_end":42515,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42824,"byte_end":42834,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71178,"byte_end":71191,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71513,"byte_end":71526,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71686,"byte_end":71699,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1446},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72813,"byte_end":72823,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":80464,"byte_end":80474,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1468},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":81204,"byte_end":81214,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1468},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82362,"byte_end":82375,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85587,"byte_end":85600,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":312},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85814,"byte_end":85827,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85945,"byte_end":85958,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":86170,"byte_end":86183,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86749,"byte_end":86766,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90013,"byte_end":90030,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90328,"byte_end":90345,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90567,"byte_end":90584,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90684,"byte_end":90701,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90730,"byte_end":90747,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90895,"byte_end":90912,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93653,"byte_end":93659,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1476},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93902,"byte_end":93908,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1476},"to":{"krate":21,"index":199}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94181,"byte_end":94187,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1476},"to":{"krate":21,"index":157}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94515,"byte_end":94521,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1476},"to":{"krate":21,"index":238}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94875,"byte_end":94881,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1476},"to":{"krate":21,"index":278}},{"span":{"file_name":"/home/jimmy/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":95433,"byte_end":95439,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1476},"to":{"krate":30,"index":96}}]}